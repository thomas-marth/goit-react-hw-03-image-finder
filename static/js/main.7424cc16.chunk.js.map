{"version":3,"sources":["components/imageGalleryItem/ImageGalleryItem.module.css","components/modal/Modal.module.css","components/App.module.css","components/imageGallery/ImageGallery.module.css","components/button/Button.module.css","components/searchbar/Searchbar.js","components/imageGalleryItem/ImageGalleryItem.js","components/imageGallery/ImageGallery.js","services/imagesApi.js","components/button/Button.js","components/modal/Modal.js","components/App.js","index.js","components/searchbar/Searchbar.module.css"],"names":["module","exports","Searchbar","state","inputValue","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onSubmit","className","styles","SearchForm","this","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","onChange","autoComplete","autoFocus","placeholder","Component","ImageGalleryItem","smallImage","largeImage","onClick","src","alt","ImageGalleryItemImage","ImageGallery","images","map","image","webformatURL","largeImageURL","id","axios","defaults","baseURL","apiKey","searchQuery","page","then","response","data","hits","Button","Modal","closeModal","code","onClose","clickOverlay","nodeName","window","addEventListener","removeEventListener","Overlay","App","results","loading","modalImage","firstFetch","handleSearchbarSubmit","query","fetchImages","imagesApi","prevState","scrollTo","top","document","documentElement","scrollHeight","behavior","catch","error","console","log","finally","openModal","imageUrl","prevProps","Loader","color","height","width","length","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7424cc16.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__3CwFB\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__2Nbfz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__29flR\",\"Modal\":\"Modal_Modal__2mprJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__z30WA\",\"Loader\":\"App_Loader__yZxK0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__gy3xg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2T4ET\"};","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./Searchbar.module.css\";\r\n\r\nexport default class Searchbar extends Component {\r\n  state = {\r\n    inputValue: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state.inputValue);\r\n    this.setState({ inputValue: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className={styles.Searchbar}>\r\n        <form className={styles.SearchForm} onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className={styles.SearchFormButton}>\r\n            <span className={styles.SearchFormButtonLabel}>Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className={styles.SearchFormInput}\r\n            type=\"text\"\r\n            value={this.state.inputValue}\r\n            onChange={this.handleChange}\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./ImageGalleryItem.module.css\";\r\n\r\nconst ImageGalleryItem = ({ smallImage, largeImage, onClick }) => {\r\n  return (\r\n    <li className={styles.ImageGalleryItem}>\r\n      <img\r\n        onClick={() => onClick(largeImage)}\r\n        src={smallImage}\r\n        alt=\"gallaryImg\"\r\n        className={styles.ImageGalleryItemImage}\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  smallImage: PropTypes.string.isRequired,\r\n  largeImage: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from \"react\";\r\nimport ImageGalleryItem from \"../imageGalleryItem/ImageGalleryItem\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./ImageGallery.module.css\";\r\n\r\nconst ImageGallery = ({ images, onClick }) => {\r\n  return (\r\n    <ul className={styles.ImageGallery}>\r\n      {images.map((image) => (\r\n        <ImageGalleryItem\r\n          key={image.id}\r\n          smallImage={image.webformatURL}\r\n          largeImage={image.largeImageURL}\r\n          onClick={onClick}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      webformatURL: PropTypes.string.isRequired,\r\n      largeImageURL: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import axios from \"axios\";\r\naxios.defaults.baseURL = \"https://pixabay.com/api\";\r\nconst apiKey = \"16819410-e96e43f9ec4d021c44a0ec2b8\";\r\n\r\nconst fetchImagesWithQuery = (searchQuery, page = 1) => {\r\n  return axios(\r\n    `/?q=${searchQuery}&page=${page}&key=${apiKey}&image_type=photo&orientation=horizontal&per_page=12`\r\n  ).then((response) => response.data.hits);\r\n};\r\n\r\nexport default { fetchImagesWithQuery };\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./Button.module.css\";\r\n\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    <div>\r\n      <button type=\"button\" onClick={onClick} className={styles.Button}>\r\n        Load More\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./Modal.module.css\";\r\n\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.closeModal);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.closeModal);\r\n  }\r\n\r\n  closeModal = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  clickOverlay = (e) => {\r\n    if (e.target.nodeName !== \"IMG\") {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { largeImage } = this.props;\r\n    return (\r\n      <div onClick={this.clickOverlay} className={styles.Overlay}>\r\n        <div className={styles.Modal}>\r\n          <img src={largeImage} alt=\"modalImg\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  largeImage: PropTypes.string.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\nimport Searchbar from \"./searchbar/Searchbar\";\nimport ImageGallery from \"./imageGallery/ImageGallery\";\nimport imagesApi from \"../services/imagesApi\";\nimport Button from \"./button/Button\";\nimport Loader from \"react-loader-spinner\";\nimport Modal from \"./modal/Modal\";\n\nimport styles from \"./App.module.css\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nexport default class App extends Component {\n  state = {\n    searchQuery: \"\",\n    page: 1,\n    results: [],\n    loading: false,\n    modalImage: null,\n    firstFetch: true,\n  };\n\n  handleSearchbarSubmit = (query) => {\n    this.setState({\n      searchQuery: query,\n      results: [],\n      page: 1,\n      firstFetch: true,\n    });\n  };\n\n  componentDidMount() {}\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevQuery = prevState.searchQuery;\n    const nextQuery = this.state.searchQuery;\n\n    prevQuery !== nextQuery && this.fetchImages();\n  }\n\n  fetchImages = () => {\n    const { searchQuery, page } = this.state;\n\n    this.setState({\n      loading: true,\n    });\n\n    imagesApi\n      .fetchImagesWithQuery(searchQuery, page)\n      .then((images) => {\n        this.setState((prevState) => ({\n          results: [...prevState.results, ...images],\n          page: prevState.page + 1,\n        }));\n        if (!this.state.firstFetch) {\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: \"smooth\",\n          });\n        }\n      })\n      .catch((error) => console.log(error))\n      .finally(() => {\n        this.setState({\n          loading: false,\n          firstFetch: false,\n        });\n      });\n  };\n\n  openModal = (imageUrl) => {\n    this.setState({ modalImage: imageUrl });\n  };\n\n  closeModal = (e) => {\n    this.setState({ modalImage: null });\n  };\n\n  render() {\n    const { results, loading, modalImage } = this.state;\n    return (\n      <div className={styles.App}>\n        <Searchbar onSubmit={this.handleSearchbarSubmit} />\n        <ImageGallery images={results} onClick={this.openModal} />\n        {modalImage && (\n          <Modal largeImage={modalImage} onClose={this.closeModal} />\n        )}\n        {loading && (\n          <div className={styles.Loader}>\n            <Loader type=\"Oval\" color=\"#00BFFF\" height={100} width={100} />\n          </div>\n        )}\n        {results.length > 0 && !loading && (\n          <Button onClick={this.fetchImages} />\n        )}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__2_8rZ\",\"SearchForm\":\"Searchbar_SearchForm__3DgfM\",\"SearchFormButton\":\"Searchbar_SearchFormButton__1VaYi\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__3kk9Z\",\"SearchFormInput\":\"Searchbar_SearchFormInput__2XwgB\"};"],"sourceRoot":""}